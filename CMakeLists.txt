cmake_minimum_required(VERSION 3.0)
project(holycc2 LANGUAGES C)
set (CMAKE_C_FLAGS_DEBUG "-Wuninitialized -g")
include(GNUInstallDirs)

if(ENABLE_ASAN)
		message("HERE")
    set (CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address -O0 -g")
				set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address -O0 -g")
				set (CMAKE_LINKER_FLAGS_DEBUG "${CMAKE_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address -g")
endif()
if(ENABLE_GPROF)
		set (CMAKE_C_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -pg")
endif()

set(sources "")
list(APPEND sources "ptrMap.c")
list(APPEND sources "linkedList.c")
list(APPEND sources "hashTable.c")
list(APPEND sources "linkedList.c")
list(APPEND sources "str.c")
list(APPEND sources "graph.c")
list(APPEND sources "utf8Encode.c")
list(APPEND sources "stringParser.c") 
list(APPEND sources "preprocessor.c")
list(APPEND sources "textMapper.c")
list(APPEND sources "graphColoring.c")
list(APPEND sources "object.c")
list(APPEND sources "parserA.c")
list(APPEND sources "lexer.c")
list(APPEND sources "parserB.c")
list(APPEND sources "diagMsg.c")
list(APPEND sources "exprParser.c")
list(APPEND sources "parse2IR.c")
list(APPEND sources "IR.c")
list(APPEND sources "IRLiveness.c")
list(APPEND sources "cacheDir.c")
list(APPEND sources "sourceHash.c")
list(APPEND sources "debugPrint.c")
list(APPEND sources "escaper.c")
list(APPEND sources "regAllocator.c")
list(APPEND sources "registers.c")
list(APPEND sources "init.c")
list(APPEND sources "IRFilter.c")
list(APPEND sources "IRTypeInference.c")
list(APPEND sources "basicBlocks.c")
list(APPEND sources "frameLayout.c")
list(APPEND sources "ieee754.c")
list(APPEND sources "opcodesParser.c")
list(APPEND sources "asmEmitter.c")
list(APPEND sources "IR2asm.c")
list(APPEND sources "compile.c")
list(APPEND sources "X86AsmSharedVars.c")
list(APPEND sources "abi.c")
list(APPEND sources "x87fpu.c")
list(APPEND sources "commandLine.c")
list(APPEND sources "rope.c")
list(APPEND sources "filePath.c")
list(APPEND sources "dumpDebugInfo.c")
list(APPEND sources "hcrtLocation.h")
list(APPEND sources "abiSysVx64.c")

set(tests "")
list(APPEND tests "tests/compileTests.c")
list(APPEND tests "tests/ropeTests.c")
list(APPEND tests "tests/tests.c")
list(APPEND tests "tests/compileTests.c")
list(APPEND tests "tests/fuzzTest.c")
add_executable(holycc2Tests ${sources} ${tests})
add_executable(hcc ${sources} "main.c")


target_link_libraries(hcc m)
target_link_libraries(holycc2Tests m)

if(ENABLE_ASAN)
  target_compile_options(holycc2Tests PRIVATE -g -fno-omit-frame-pointer -fsanitize=address)
  #target_compile_options(hcc PRIVATE -g -fno-omit-frame-pointer -fsanitize=address)
endif()

install(TARGETS hcc RUNTIME DESTINATION bin)

find_program(codedoc "codedoc")
if(TRUE)
	add_custom_target(doc DEPENDS ${sources})
	file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/doc")

foreach(file ${sources})
 get_filename_component(fn ${file} NAME)
	get_filename_component(dir ${file} DIRECTORY)
 
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/doc/${dir}")

if(EXISTS "${CMAKE_SOURCE_DIR}/doc/${file}.md")
 add_custom_command(TARGET doc COMMAND codedoc --title "HolyCC:${file}" --body ${CMAKE_SOURCE_DIR}/doc/${file}.md ${CMAKE_SOURCE_DIR}/${file}>${CMAKE_SOURCE_DIR}/doc/${file}.html DEPENDS ${file})
	else ()
	add_custom_command(TARGET doc COMMAND codedoc --title "HolyCC:${file}"   ${CMAKE_SOURCE_DIR}/${file}>${CMAKE_SOURCE_DIR}/doc/${file}.html DEPENDS ${file})
	endif()	
	endforeach()
endif()


install(TARGETS hcc DESTINATION bin)
install(DIRECTORY "${CMAKE_SOURCE_DIR}/HolyCRT" DESTINATION ${CMAKE_INSTALL_DATADIR})
install(DIRECTORY "${CMAKE_SOURCE_DIR}/HolyCRT64" DESTINATION ${CMAKE_INSTALL_DATADIR})

set(HCRT_LOCATION "${CMAKE_SOURCE_DIR}/HolyCRT/")
set(HCRT_LOCATION64 "${CMAKE_SOURCE_DIR}/HolyCRT64/")
message("${CMAKE_INSTALL_DATADIR}")
set(HCRT_LOCATION_INSTALLED "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/HolyCRT")
set(HCRT_LOCATION_INSTALLED64 "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/HolyCRT64")
configure_file("${CMAKE_SOURCE_DIR}/hcrtLocation.h.in" "${CMAKE_SOURCE_DIR}/hcrtLocation.h" @ONLY)
